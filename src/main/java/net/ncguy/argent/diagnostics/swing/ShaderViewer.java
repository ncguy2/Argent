package net.ncguy.argent.diagnostics.swing;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import net.ncguy.argent.diagnostics.swing.syntax.token.GLSLTokenMakerFactory;
import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.RTextScrollPane;

import javax.swing.*;
import java.awt.*;

/**
 * Created by Guy on 05/09/2016.
 */
public class ShaderViewer {
    private JTabbedPane RootTabPane;
    private JPanel panel1;
    public RSyntaxTextArea VertexShaderSource;
    public RSyntaxTextArea FragmentShaderSource;
    public JLabel ShaderName;

    public void init() {
        GLSLTokenMakerFactory factory = new GLSLTokenMakerFactory();
        ((RSyntaxDocument) VertexShaderSource.getDocument()).setTokenMakerFactory(factory);
        ((RSyntaxDocument) FragmentShaderSource.getDocument()).setTokenMakerFactory(factory);

        VertexShaderSource.setSyntaxEditingStyle(GLSLTokenMakerFactory.GLSL);
        FragmentShaderSource.setSyntaxEditingStyle(GLSLTokenMakerFactory.GLSL);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        RootTabPane = new JTabbedPane();
        panel1.add(RootTabPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        RootTabPane.addTab("Shader Source", panel2);
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setContinuousLayout(true);
        splitPane1.setOneTouchExpandable(false);
        splitPane1.setResizeWeight(0.5);
        panel2.add(splitPane1, new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPane1.setLeftComponent(panel3);
        final JLabel label1 = new JLabel();
        label1.setText("Vertex Shader Source");
        panel3.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final RTextScrollPane rTextScrollPane1 = new RTextScrollPane();
        rTextScrollPane1.setIconRowHeaderEnabled(false);
        rTextScrollPane1.setLineNumbersEnabled(false);
        rTextScrollPane1.setVerticalScrollBarPolicy(20);
        panel3.add(rTextScrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        VertexShaderSource = new RSyntaxTextArea();
        rTextScrollPane1.setViewportView(VertexShaderSource);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPane1.setRightComponent(panel4);
        final JLabel label2 = new JLabel();
        label2.setText("Fragment Shader Source");
        panel4.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final RTextScrollPane rTextScrollPane2 = new RTextScrollPane();
        rTextScrollPane2.setIconRowHeaderEnabled(false);
        rTextScrollPane2.setLineNumbersEnabled(false);
        rTextScrollPane2.setVerticalScrollBarPolicy(20);
        panel4.add(rTextScrollPane2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FragmentShaderSource = new RSyntaxTextArea();
        rTextScrollPane2.setViewportView(FragmentShaderSource);
        ShaderName = new JLabel();
        ShaderName.setText("Shader Name Goes Here");
        panel2.add(ShaderName, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
